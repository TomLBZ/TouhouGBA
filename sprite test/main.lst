                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _set_sprite_data
                                     13 	.globl _delay
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area _DATA
                                     21 ;--------------------------------------------------------
                                     22 ; ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area _INITIALIZED
                                     25 ;--------------------------------------------------------
                                     26 ; absolute external ram data
                                     27 ;--------------------------------------------------------
                                     28 	.area _DABS (ABS)
                                     29 ;--------------------------------------------------------
                                     30 ; global & static initialisations
                                     31 ;--------------------------------------------------------
                                     32 	.area _HOME
                                     33 	.area _GSINIT
                                     34 	.area _GSFINAL
                                     35 	.area _GSINIT
                                     36 ;--------------------------------------------------------
                                     37 ; Home
                                     38 ;--------------------------------------------------------
                                     39 	.area _HOME
                                     40 	.area _HOME
                                     41 ;--------------------------------------------------------
                                     42 ; code
                                     43 ;--------------------------------------------------------
                                     44 	.area _CODE
                                     45 ;main.c:9: void main(){
                                     46 ;	---------------------------------
                                     47 ; Function main
                                     48 ; ---------------------------------
      000000                         49 _main::
                                     50 ;main.c:10: uint8_t spriteIndex = 0;
      000000 0E 00                   51 	ld	c, #0x00
                                     52 ;main.c:11: set_sprite_data(0, 2, RM);
      000002 11r00r00                53 	ld	de, #_RM
      000005 D5                      54 	push	de
      000006 21 00 02                55 	ld	hl, #0x200
      000009 E5                      56 	push	hl
      00000A CDr00r00                57 	call	_set_sprite_data
      00000D E8 04                   58 	add	sp, #4
                                     59 ;c:/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00000F 21r02r00                60 	ld	hl, #(_shadow_OAM + 2)
      000012 36 00                   61 	ld	(hl), #0x00
                                     62 ;c:/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000014 21r00r00                63 	ld	hl, #_shadow_OAM
                                     64 ;c:/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000017 3E 4E                   65 	ld	a, #0x4e
      000019 22                      66 	ld	(hl+), a
      00001A 36 58                   67 	ld	(hl), #0x58
                                     68 ;main.c:14: SHOW_SPRITES;
      00001C F0r00                   69 	ldh	a, (_LCDC_REG + 0)
      00001E F6 02                   70 	or	a, #0x02
      000020 E0r00                   71 	ldh	(_LCDC_REG + 0), a
                                     72 ;main.c:16: while(1){
      000022                         73 00102$:
                                     74 ;main.c:17: spriteIndex = spriteIndex ? 0 : 1;
      000022 79                      75 	ld	a, c
      000023 B7                      76 	or	a, a
      000024 28 05                   77 	jr	Z, 00110$
      000026 01 00 00                78 	ld	bc, #0x0000
      000029 18 03                   79 	jr	00111$
      00002B                         80 00110$:
      00002B 01 01 00                81 	ld	bc, #0x0001
      00002E                         82 00111$:
                                     83 ;c:/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00002E 21r02r00                84 	ld	hl, #(_shadow_OAM + 2)
      000031 71                      85 	ld	(hl), c
                                     86 ;main.c:19: delay(1000);
      000032 C5                      87 	push	bc
      000033 11 E8 03                88 	ld	de, #0x03e8
      000036 D5                      89 	push	de
      000037 CDr00r00                90 	call	_delay
      00003A E1                      91 	pop	hl
      00003B C1                      92 	pop	bc
                                     93 ;c:/gbdk/include/gb/gb.h:1536: OAM_item_t * itm = &shadow_OAM[nb];
      00003C 11r00r00                94 	ld	de, #_shadow_OAM
                                     95 ;c:/gbdk/include/gb/gb.h:1537: itm->y+=y, itm->x+=x;
      00003F 1A                      96 	ld	a, (de)
      000040 12                      97 	ld	(de), a
      000041 13                      98 	inc	de
      000042 1A                      99 	ld	a, (de)
      000043 C6 0A                  100 	add	a, #0x0a
      000045 12                     101 	ld	(de), a
                                    102 ;main.c:20: scroll_sprite(0, 10, 0);
                                    103 ;main.c:22: }
      000046 18 DA                  104 	jr	00102$
                                    105 	.area _CODE
                                    106 	.area _INITIALIZER
                                    107 	.area _CABS (ABS)
